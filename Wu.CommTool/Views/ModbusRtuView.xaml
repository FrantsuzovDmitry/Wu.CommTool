<UserControl
    x:Class="Wu.CommTool.Views.ModbusRtuView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cvt="clr-namespace:Wu.CommTool.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:dvm="clr-namespace:Wu.CommTool.ViewModels.DesignViewModels"
    xmlns:ext="clr-namespace:Wu.CommTool.Extensions"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Wu.CommTool.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:model="clr-namespace:Wu.CommTool.Models"
    xmlns:port="clr-namespace:System.IO.Ports;assembly=System.IO.Ports"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:wucvt="clr-namespace:Wu.Wpf.Converters;assembly=Wu.Wpf"
    d:DataContext="{x:Static dvm:ModbusRtuDesignViewModel.Instance}"
    d:DesignHeight="600"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="MessageTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="0">
                    <Setter Property="Foreground" Value="{StaticResource Blue_Foreground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="1">
                    <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="2">
                    <Setter Property="Foreground" Value="{StaticResource Yellow_Foreground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="3">
                    <Setter Property="Foreground" Value="{StaticResource Red_Foreground}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="4">
                    <Setter Property="Foreground" Value="#d5ca14" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MessageBorder" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="0">
                    <Setter Property="Background" Value="{StaticResource Blue_Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource Blue_BorderBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="1">
                    <Setter Property="Background" Value="{StaticResource Green_Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="2">
                    <Setter Property="Background" Value="{StaticResource Yellow_Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource Yellow_BorderBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="3">
                    <Setter Property="Background" Value="{StaticResource Red_Background}" />
                    <Setter Property="BorderBrush" Value="{StaticResource Red_BorderBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="4">
                    <Setter Property="Background" Value="#fdffe5" />
                    <Setter Property="BorderBrush" Value="#f6ff91" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MessageTextBox" TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="#00FFFFFF" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="0">
                    <Setter Property="Foreground" Value="#096dd9" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="1">
                    <Setter Property="Foreground" Value="#389E0D" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="2">
                    <Setter Property="Foreground" Value="#faae19" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="3">
                    <Setter Property="Foreground" Value="#cf1322" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="4">
                    <Setter Property="Foreground" Value="#d5ca14" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <md:DialogHost Identifier="ModbusRtuView" Style="{StaticResource MaterialDesignEmbeddedDialogHost}">
        <md:DrawerHost IsLeftDrawerOpen="{Binding IsDrawersOpen.IsLeftDrawerOpen}">
            <!--  左侧抽屉  -->
            <md:DrawerHost.LeftDrawerContent>
                <DockPanel Width="300" Background="#f5f5f5">
                    <Border
                        Margin="5"
                        Background="White"
                        BorderThickness="1"
                        CornerRadius="5"
                        DockPanel.Dock="Top">
                        <StackPanel Orientation="Vertical">
                            <TextBlock
                                Margin="5"
                                HorizontalAlignment="Center"
                                FontSize="24"
                                Text="串口设置" />
                            <StackPanel Orientation="Horizontal">
                                <ComboBox
                                    Width="230"
                                    hc:InfoElement.Placeholder="请选择串口..."
                                    hc:InfoElement.Title="串口"
                                    IsEnabled="{Binding ComConfig.IsOpened, Converter={wucvt:ReverseBool}}"
                                    ItemsSource="{Binding ComPorts}"
                                    SelectedValue="{Binding ComConfig.Port, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                    Style="{StaticResource FormComboBox}">
                                    <!--  添加触发器,支持点击事件  -->
                                    <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="DropDownOpened">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ExecuteCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" CommandParameter="GetComPorts" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                                </ComboBox>
                                <Button
                                    Width="30"
                                    Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                    Margin="5"
                                    HorizontalAlignment="Left"
                                    Command="{Binding ExecuteCommand}"
                                    CommandParameter="GetComPorts"
                                    DockPanel.Dock="Left"
                                    Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                    ToolTip="MaterialDesignFloatingActionMiniButton">
                                    <md:PackIcon
                                        Width="24"
                                        Height="24"
                                        Kind="Search" />
                                </Button>
                            </StackPanel>
                            <ComboBox
                                hc:InfoElement.Placeholder="请选择波特率..."
                                hc:InfoElement.Title="波特率"
                                IsEnabled="{Binding ComConfig.IsOpened, Converter={wucvt:ReverseBool}}"
                                ItemsSource="{Binding Source={cvt:EnumBindingSource {x:Type model:BaudRate}}}"
                                SelectedItem="{Binding ComConfig.BaudRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource FormComboBox}" />

                            <ComboBox
                                hc:InfoElement.Placeholder="请选择校验位..."
                                hc:InfoElement.Title="校验位"
                                IsEnabled="{Binding ComConfig.IsOpened, Converter={wucvt:ReverseBool}}"
                                ItemsSource="{Binding Source={StaticResource ValueParity}}"
                                SelectedValue="{Binding ComConfig.Parity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource FormComboBox}" />

                            <ComboBox
                                hc:InfoElement.Placeholder="请选择数据位..."
                                hc:InfoElement.Title="数据位"
                                IsEnabled="{Binding ComConfig.IsOpened, Converter={wucvt:ReverseBool}}"
                                ItemsSource="{StaticResource DataBits}"
                                SelectedItem="{Binding ComConfig.DataBits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource FormComboBox}" />
                            <ComboBox
                                hc:InfoElement.Placeholder="请选择停止位..."
                                hc:InfoElement.Title="停止位"
                                IsEnabled="{Binding ComConfig.IsOpened, Converter={wucvt:ReverseBool}}"
                                ItemsSource="{Binding Source={StaticResource ValueStopBits}}"
                                SelectedItem="{Binding ComConfig.StopBits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                Style="{StaticResource FormComboBox}" />


                            <!--<hc:TransitioningContentControl>
                                <hc:AutoCompleteTextBox Width="200"
                                                        Margin="0"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        DisplayMemberPath="Name"
                                                        ItemsSource="{Binding Source={cvt:EnumBindingSource {x:Type model:BaudRate}}}" />
                            </hc:TransitioningContentControl>-->

                            <Button
                                MinHeight="30"
                                Margin="30,5"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="OpenCom">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignFlatMidBgButton}" TargetType="Button">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ComConfig.IsOpened}" Value="true">
                                                <Setter Property="Content" Value="关闭串口" />
                                                <Setter Property="Foreground" Value="{StaticResource Red_Foreground}" />
                                                <Setter Property="Background" Value="{StaticResource Red_Background}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource Red_BorderBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding ComConfig.IsOpened}" Value="false">
                                                <Setter Property="Content" Value="打开串口" />
                                                <Setter Property="Foreground" Value="{StaticResource Green_Foreground}" />
                                                <Setter Property="Background" Value="{StaticResource Green_Background}" />
                                                <Setter Property="BorderBrush" Value="{StaticResource Green_BorderBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                        </StackPanel>
                    </Border>
                    <Grid Height="100" DockPanel.Dock="Top" />
                    <Grid Height="100" DockPanel.Dock="Top" />
                </DockPanel>
            </md:DrawerHost.LeftDrawerContent>

            <!--  主体内容  -->
            <DockPanel>
                <Grid DockPanel.Dock="Top">
                    <TextBlock Style="{StaticResource TitleTextBlock}" Text="Modbus Rtu" />
                    <DockPanel LastChildFill="False">
                        <!--  配置Com按钮  -->
                        <Button
                            Width="30"
                            Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                            Margin="5"
                            HorizontalAlignment="Left"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="ConfigCom"
                            Cursor="Hand"
                            Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            ToolTip="配置串口">
                            <md:PackIcon
                                Width="24"
                                Height="24"
                                Kind="COG" />
                        </Button>

                        <!--  清空消息按钮  -->
                        <Button
                            Width="30"
                            Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                            Margin="5"
                            HorizontalAlignment="Left"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="Clear"
                            ToolTip="清空消息">
                            <md:PackIcon
                                Width="24"
                                Height="24"
                                Kind="DeleteOffOutline" />
                            <!--  "{StaticResource MaterialDesignFloatingActionMiniButton}"  -->
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}" TargetType="Button">
                                    <Setter Property="Foreground" Value="{StaticResource Red_Foreground}" />
                                    <Setter Property="Background" Value="{StaticResource Red_Background}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource Red_BorderBrush}" />
                                    <!--<Setter Property="Foreground" Value="{StaticResource Yellow_Foreground}" />
                                    <Setter Property="Background" Value="{StaticResource Yellow_Background}" />
                                    <Setter Property="BorderBrush" Value="{StaticResource Yellow_BorderBrush}" />-->
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--  测试按钮  -->
                        <!--<Button
                            Width="30"
                            Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                            Margin="50,0,0,0"
                            HorizontalAlignment="Left"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="Test1"
                            Style="{StaticResource MaterialDesignFloatingActionMiniButton}">
                            <md:PackIcon
                                Width="24"
                                Height="24"
                                Kind="TestTube" />
                        </Button>-->

                        <!--  自动搜索ModbusRtu设备  -->
                        <Button
                            Width="30"
                            Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                            Margin="5"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="AutoSearch"
                            Cursor="Hand"
                            DockPanel.Dock="Right"
                            Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                            ToolTip="自动搜索ModbusRtu设备">
                            <md:PackIcon
                                Width="24"
                                Height="24"
                                Kind="Search" />
                        </Button>


                        <!--<Button Width="30"
                                Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                                Margin="5"
                                HorizontalAlignment="Left"
                                Command="{Binding ExecuteCommand}"
                                CommandParameter="GetComPorts"
                                DockPanel.Dock="Left"
                                Style="{StaticResource MaterialDesignFloatingActionMiniButton}"
                                ToolTip="MaterialDesignFloatingActionMiniButton">
                            <md:PackIcon Width="24"
                                         Height="24"
                                         Kind="Search" />
                        </Button>-->
                    </DockPanel>
                </Grid>

                <StackPanel
                    Height="30"
                    Background="AliceBlue"
                    DockPanel.Dock="Bottom"
                    Orientation="Horizontal">
                    <TextBlock
                        Margin="10,0,0,0"
                        VerticalAlignment="Center"
                        FontWeight="Bold"
                        Text="{Binding ComConfig.Port.Key}" />
                    <TextBlock VerticalAlignment="Center" Text=" : " />
                    <TextBlock VerticalAlignment="Center" Text="{Binding ComConfig.Port.Value}" />
                    <TextBlock VerticalAlignment="Center" Text="{Binding ComConfig.Parity}" />
                    <TextBlock
                        Margin="5,0"
                        VerticalAlignment="Center"
                        Text="{Binding ComConfig.DataBits}" />
                    <TextBlock
                        Margin="5,0"
                        VerticalAlignment="Center"
                        Text="{Binding ComConfig.StopBits}" />
                    <Border
                        Width="20"
                        Height="{Binding RelativeSource={RelativeSource self}, Path=Width}"
                        Margin="10,5"
                        CornerRadius="10">
                        <Border.Style>
                            <Style TargetType="Border">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ComConfig.IsOpened}" Value="True">
                                        <Setter Property="Background" Value="LawnGreen" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ComConfig.IsOpened}" Value="False">
                                        <Setter Property="Background" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                    </Border>

                    <Border
                        Margin="30,3"
                        BorderBrush="LightBlue"
                        BorderThickness="1" />
                    <TextBlock VerticalAlignment="Center" Text="Receive: " />
                    <TextBlock VerticalAlignment="Center" Text="{Binding ReceivBytesCount}" />
                    <TextBlock VerticalAlignment="Center" Text=" Bytes" />
                    <Border
                        Margin="30,3"
                        BorderBrush="LightBlue"
                        BorderThickness="1" />
                    <TextBlock VerticalAlignment="Center" Text="Send: " />
                    <TextBlock VerticalAlignment="Center" Text="{Binding SendBytesCount}" />
                    <TextBlock VerticalAlignment="Center" Text=" Bytes" />
                </StackPanel>


                <DockPanel Height="100" DockPanel.Dock="Bottom">
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <ComboBox
                            MinWidth="190"
                            hc:InfoElement.Placeholder="请选择校验模式..."
                            hc:InfoElement.Title="自动校验模式: "
                            hc:InfoElement.TitleWidth="90"
                            ItemsSource="{Binding Source={StaticResource ValueCrcMode}}"
                            SelectedItem="{Binding CrcMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource FormComboBox}" />
                        <Button
                            Margin="10,0"
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="Send"
                            Content="发送" />
                    </StackPanel>
                    <TextBox
                        Margin="5"
                        VerticalContentAlignment="Top"
                        Text="{Binding SendMessage}"
                        TextWrapping="Wrap" />
                </DockPanel>

                <Border
                    Margin="5"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    CornerRadius="5">
                    <hc:ScrollViewer ext:ScrollViewerExtensions.AlwaysScrollToEnd="True" IsInertiaEnabled="True">
                        <!--  页面消息  -->
                        <ItemsControl Background="Transparent" ItemsSource="{Binding Messages}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border
                                        Margin="3"
                                        Padding="2"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        Style="{StaticResource MessageBorder}">
                                        <WrapPanel Orientation="Horizontal">
                                            <TextBlock
                                                Margin="3"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MessageTextBlock}"
                                                Text="{Binding Time, StringFormat={}{0:yyyy-MM-dd HH:mm}}" />
                                            <TextBlock
                                                Margin="5,0"
                                                VerticalAlignment="Center"
                                                Style="{StaticResource MessageTextBlock}"
                                                Text="{Binding Type}" />
                                            <!--<TextBlock Margin="5"
                                                       VerticalAlignment="Center"
                                                       Style="{StaticResource MessageTextBlock}"
                                                       Text="{Binding Content}" />-->
                                            <TextBox
                                                VerticalAlignment="Center"
                                                FontSize="12"
                                                FontWeight="Bold"
                                                IsReadOnly="True"
                                                Style="{StaticResource MessageTextBox}"
                                                Text="{Binding Content}"
                                                TextWrapping="Wrap" />
                                        </WrapPanel>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </hc:ScrollViewer>
                </Border>
            </DockPanel>
        </md:DrawerHost>
    </md:DialogHost>
</UserControl>
